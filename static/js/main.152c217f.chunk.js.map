{"version":3,"sources":["data/images/big sync /^/.*/.jpg$","data/images/big/0.jpg","data/images/big/1.jpg","data/images/big/2.jpg","data/images/big/3.jpg","data/images/big/4.jpg","data/images/big/5.jpg","data/images/small sync /.jpg$","data/images/small/0.jpg","data/images/small/1.jpg","data/images/small/2.jpg","data/images/small/3.jpg","data/images/small/4.jpg","data/images/small/5.jpg","components/NavigationPanel.js","components/About.js","components/Services.js","components/Contacts.js","components/ImageContainer.js","components/BigImageContainer.js","components/Gallery.js","components/OurWorks.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["map","./0.jpg","./1.jpg","./2.jpg","./3.jpg","./4.jpg","./5.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","NavigationPanel","react_default","a","createElement","className","Link","to","textStrings","about","services","contacts","ourWorks","About","renderAchievementList","aboutPageContent","achievements","item","index","key","organizationName","mainContent1","mainContent2","this","React","Component","Services","renderServicesList","servicesPageContent","servicesString","Contacts","contactsPageContent","businessType","address","bank","bankCode","CEO","emale","ImageContainer","imageClick","_this","props","onClick","imageIndex","_this$props","image","src","alt","BigImageContainer","onCloseReview","onGoPrevious","onGoNext","require","Gallery","state","bigImageIndex","setState","bigImageCloseClick","bigImageGoPrevious","maxImagesCount","imagesArray","length","currentImageIndex","bigImageGoNext","renderImagesTable","i","ImageContainer_ImageContainer","noPhoto","renderBigImage","bigImageDir","BigImageContainer_BigImageContainer","Fragment","images","OurWorks","Gallery_Gallery","Footer","class","App","BrowserRouter","NavigationPanel_NavigationPanel","Switch","Route","path","children","About_About","Services_Services","Contacts_Contacts","OurWorks_OurWorks","Redirect","from","exact","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.152c217f.chunk.js","sourcesContent":["var map = {\n\t\"./0.jpg\": 31,\n\t\"./1.jpg\": 32,\n\t\"./2.jpg\": 33,\n\t\"./3.jpg\": 34,\n\t\"./4.jpg\": 35,\n\t\"./5.jpg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/0.b1a98962.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.03a9dac1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.d3721b90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.4cded91a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.c6f5a115.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.80b2c5fd.jpg\";","var map = {\n\t\"./0.jpg\": 38,\n\t\"./1.jpg\": 39,\n\t\"./2.jpg\": 40,\n\t\"./3.jpg\": 41,\n\t\"./4.jpg\": 42,\n\t\"./5.jpg\": 43\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/0.69d0d119.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.4ab38440.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.5cff287d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.b293c3f0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.59ef4bee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.16d386a3.jpg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport textStrings from '../data/textStrings.json'\r\n\r\nconst NavigationPanel = () => {\r\n    return (\r\n        <nav className = \"NavigationPanel\">\r\n            <ul className = \"HorizontalPanel\">\r\n                <li>\r\n                    <Link to = '/about'>\r\n                        <button>{textStrings.about}</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = '/services'>\r\n                        <button>{textStrings.services}</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = '/contacts'>\r\n                        <button>{textStrings.contacts}</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to = '/ourWorks'>\r\n                        <button>{textStrings.ourWorks}</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport {NavigationPanel}","import React from 'react'\r\nimport textStrings from '../data/textStrings.json'\r\nimport aboutPageContent from '../data/aboutPageContent'\r\n\r\nclass About extends React.Component {\r\n\r\n    renderAchievementList = () => {\r\n        return aboutPageContent.achievements.map(function(item, index) {\r\n            return (\r\n                <li key = {index}>\r\n                    {item}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"PageContent\">\r\n                <h1>{textStrings.organizationName}</h1>\r\n                <div className = \"PageBlock\">\r\n                    <p>{aboutPageContent.mainContent1}</p>\r\n                    <p>{aboutPageContent.mainContent2}</p>\r\n                    <ul>\r\n                        {this.renderAchievementList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { About }","import React from 'react'\r\nimport textStrings from '../data/textStrings.json'\r\nimport servicesPageContent from '../data/servicesPageContent.json'\r\n\r\nclass Services extends React.Component {\r\n\r\n    renderServicesList = () => {\r\n        return servicesPageContent.services.map(function(item, index) {\r\n            return (\r\n                <li key = {index}>\r\n                    {item}\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"PageContent\">\r\n                <h1>{textStrings.servicesString}</h1>\r\n                <div className = \"PageBlock\">\r\n                    <ul>\r\n                        {this.renderServicesList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { Services }","import React from 'react'\r\nimport textStrings from '../data/textStrings.json'\r\nimport contactsPageContent from '../data/contactsPageContent.json'\r\n\r\nconst Contacts = () => {\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <h1>{textStrings.contacts}</h1>\r\n                <p>{contactsPageContent.businessType} {textStrings.organizationName}</p>\r\n                <div className=\"PageBlock\">\r\n                    <p>{contactsPageContent.address}</p>\r\n                    <p>{contactsPageContent.bank}</p>\r\n                    <p>{contactsPageContent.bankCode}</p>\r\n                    <p>{contactsPageContent.CEO}</p>\r\n                    <p>{contactsPageContent.emale}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport { Contacts }","import React from 'react'\r\n\r\nclass ImageContainer extends React.Component {\r\n\r\n    imageClick = () => {\r\n        this.props.onClick(this.props.imageIndex)\r\n    }\r\n\r\n    render() {\r\n        const { id, image } = this.props\r\n\r\n        return (\r\n            <div className = \"ImageContainer\">\r\n                <img\r\n                    key = {id}\r\n                    src = { image }\r\n                    alt=\"img\"\r\n                    onClick = {this.imageClick}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { ImageContainer }","import React from 'react'\r\n\r\nclass BigImageContainer extends React.Component {\r\n\r\n    onCloseReview = () => {\r\n        this.props.onCloseReview()\r\n    }\r\n\r\n    onGoPrevious = () => {\r\n        this.props.onGoPrevious()\r\n    }\r\n\r\n    onGoNext = () => {\r\n        this.props.onGoNext()\r\n    }\r\n\r\n    render() {\r\n        const //bigImageDir = this.props.bigImageDir,\r\n              imageIndex = this.props.imageIndex\r\n              //imageResolution = '.jpg',\r\n              //image = bigImageDir + imageIndex + imageResolution\r\n\r\n        return (\r\n            <div className = \"BigImageContainer\">\r\n                <img\r\n                    src = {require('../data/images/big/' + imageIndex + '.jpg')}\r\n                    //src = {require(image)} // It doesn't work! https://github.com/webpack/webpack/issues/6680\r\n                    alt=\"img\"\r\n                    onClick = { this.imageClick }\r\n                />\r\n                <div className = \"Icon CloseReview\" onClick = {this.onCloseReview}></div>\r\n                <div className = \"Icon GoPrevious\" onClick = {this.onGoPrevious}></div>\r\n                <div className = \"Icon GoNext\" onClick = {this.onGoNext}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { BigImageContainer }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport textStrings from '../data/textStrings.json'\r\nimport { ImageContainer } from './ImageContainer'\r\nimport { BigImageContainer } from './BigImageContainer'\r\n\r\nclass Gallery extends React.Component {\r\n\r\n    state = {\r\n        bigImageIndex : null\r\n    }\r\n\r\n    imageClick = (imageIndex) => {\r\n        this.setState(\r\n            {\r\n                bigImageIndex: imageIndex\r\n            }\r\n        )\r\n    }\r\n\r\n    bigImageCloseClick = () => {\r\n        this.setState(\r\n            {\r\n                bigImageIndex: null\r\n            }\r\n        )\r\n    }\r\n\r\n    bigImageGoPrevious = () => {\r\n\r\n        const { imagesArray } = this.props,\r\n            maxImagesCount = imagesArray.length;\r\n\r\n        let currentImageIndex = this.state.bigImageIndex - 1;\r\n\r\n        if (currentImageIndex === -1)\r\n            currentImageIndex = maxImagesCount - 1;\r\n\r\n        this.setState(\r\n            {\r\n                bigImageIndex: currentImageIndex\r\n            }\r\n        )\r\n    }\r\n\r\n    bigImageGoNext = () => {\r\n        const { imagesArray } = this.props,\r\n              maxImagesCount = imagesArray.length;\r\n\r\n        let currentImageIndex = this.state.bigImageIndex + 1;\r\n\r\n        if (currentImageIndex === maxImagesCount)\r\n            currentImageIndex = 0;\r\n\r\n        this.setState(\r\n            {\r\n                bigImageIndex: currentImageIndex\r\n            }\r\n        )\r\n    }\r\n\r\n    renderImagesTable = () => {\r\n        const { imagesArray } = this.props,\r\n              imageClick = this.imageClick\r\n\r\n        if(imagesArray.length) {\r\n            return imagesArray.map(function (item, i) {\r\n                return (\r\n                    <ImageContainer\r\n                        key = {i}\r\n                        imageIndex = {i}\r\n                        id = {item.id}\r\n                        image = {item.image}\r\n                        onClick = {imageClick}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        else {\r\n            return (\r\n                <p>{textStrings.noPhoto}</p>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderBigImage = () => {\r\n        const bigImageIndex = this.state.bigImageIndex,\r\n              bigImageDir = this.props.bigImageDir\r\n\r\n        if (bigImageIndex !== null) {\r\n            return (\r\n                <BigImageContainer\r\n                    onCloseReview = {this.bigImageCloseClick}\r\n                    onGoPrevious = {this.bigImageGoPrevious}\r\n                    onGoNext = {this.bigImageGoNext}\r\n                    imageIndex = {bigImageIndex}\r\n                    bigImageDir = {bigImageDir}/>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <div className = \"Gallery\">\r\n                { this.renderImagesTable() }\r\n                { this.renderBigImage() }\r\n            </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nGallery.propTypes = {\r\n    imagesArray: PropTypes.array.isRequired\r\n}\r\n\r\nexport { Gallery }","import React from 'react'\r\nimport { Gallery } from './Gallery'\r\nconst images = require.context('../data/images/small', true, /\\.jpg$/),\r\n      bigImageDir = '../data/images/big/';\r\n\r\nconst imagesArray = images.keys()\r\n    .map(key => {\r\n        return {\r\n            id: key,\r\n            image: images(key)\r\n        }\r\n    })\r\n\r\nclass OurWorks extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"PageContent\">\r\n                <Gallery imagesArray = {imagesArray} bigImageDir = {bigImageDir}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { OurWorks }","import React from 'react'\r\nimport contactsPageContent from '../data/contactsPageContent.json'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer class = \"Footer\">\r\n            <p>{contactsPageContent.address}</p>\r\n            <p>{contactsPageContent.emale}</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport {Footer}","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\nimport { NavigationPanel } from './components/NavigationPanel'\nimport { About } from './components/About'\nimport { Services } from './components/Services'\nimport { Contacts } from './components/Contacts'\nimport { OurWorks } from \"./components/OurWorks\"\nimport { Footer} from \"./components/Footer\"\n\nimport './App.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <React.Fragment>\n                    <NavigationPanel></NavigationPanel>\n                    <Switch>\n                        <Route path = '/about' children = {()=> (\n                            <About/>\n                        )}/>\n                        <Route path = '/services' children = {() => (\n                            <Services/>\n                        )}/>\n                        <Route path = '/contacts' children = {() => (\n                            <Contacts/>\n                        )}/>\n                        <Route path = '/ourWorks' children = {() => (\n                            <OurWorks/>\n                        )}/>\n                        <Redirect from=\"/energostroygrad\" exact to=\"/about\" />\n                    </Switch>\n                    <Footer></Footer>\n                </React.Fragment>\n            </BrowserRouter>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}